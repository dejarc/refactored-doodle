version: 2.1
commands:
  destroy_environment:
    description: "A simple command to destroy infrastructure"
    parameters:
      stack_name:
        type: string
        default: "circleci-stack"
    steps:
      - run: |
          aws cloudformation delete-stack --stack-name << parameters.stack_name >>
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run : |
          aws cloudformation deploy --stack-name circleci-stack --template-file template.yml
  smoke_test_infrastructure_fail:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run : |
          aws cloudformation deploy --stack-name circleci-stack --template-file template.yml
      - run: return 1
      - destroy_environment
        when: on_fail

  configure_server_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["89:9d:db:4b:36:ff:29:00:5d:87:7c:2a:bd:33:93:0c"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ansible-playbook main-remote.yml -i inventory

  smoke_test_curl:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Check if website exists
          command: |
            if curl -s --head "https://google4.com"
            then
              echo "It worked!"
            else
              echo "It failed"
            fi

workflows:
  workflow:
    jobs:
      - smoke_test_infrastructure_fail
